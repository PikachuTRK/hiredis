name: Build and test
on: [push, pull_request, workflow_dispatch]

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install -y redis-server valgrind libevent-dev

      - name: Build using cmake
        env:
          EXTRA_CMAKE_OPTS: -DENABLE_EXAMPLES:BOOL=ON -DENABLE_SSL:BOOL=ON -DENABLE_SSL_TESTS:BOOL=ON -DENABLE_ASYNC_TESTS:BOOL=ON
          CFLAGS: -Werror
          CXXFLAGS: -Werror
        run: mkdir build && cd build && cmake .. && make

      - name: Upload Cmake build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cmake-build-output
          path: ${{ github.workspace }}/build
 

      - name: Build using makefile
        run: USE_SSL=1 TEST_ASYNC=1 make


      - name: Run tests
        env:
          SKIPS_AS_FAILS: 1
          TEST_SSL: 1
        run: $GITHUB_WORKSPACE/test.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-output
          path: ${{ github.workspace }}
      #      - name: Run tests under valgrind
      #        env:
      #          SKIPS_AS_FAILS: 1
      #          TEST_PREFIX: valgrind --error-exitcode=99 --track-origins=yes --leak-check=full
      #        run: $GITHUB_WORKSPACE/test.sh

  test-cmake-version:
    name: Test build with CMake ${{ matrix.cmake-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmake-version: ['3.7.0', '3.22.0', '3.28.0', '4.0.0']
    steps:
      - uses: actions/checkout@v4
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: ${{ matrix.cmake-version }}
      - name: Install hiredis dependencies
        run: |
          sudo apt-get install -y libssl-dev libevent-dev
      - name: Build
        run: |
          mkdir build && cd build
          cmake -DENABLE_SSL=ON -DENABLE_SSL_TESTS=ON -DENABLE_ASYNC_TESTS=ON -DENABLE_EXAMPLES=ON ..
          make
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cmake-version-output
          path: ${{ github.workspace }}/build
